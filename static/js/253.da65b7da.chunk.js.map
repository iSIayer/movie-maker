{"version":3,"file":"static/js/253.da65b7da.chunk.js","mappings":"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","sources":["components/CommonStyles/MainTitle.styled.js","components/MovieList/MoviesList.styled.js","components/MovieList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.accent};\n`;\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: -10px;\n`;\nexport const MovieListItem = styled.li`\n  width: 340px;\n  margin: 10px;\n  border-radius: 24px;\n  box-shadow: 9px 9px 16px rgba(163, 177, 198, 0.6),\n    -9px -9px 16px rgba(255, 255, 255, 0.5);\n  overflow: hidden;\n  transition: transform 250ms ease-in-out;\n\n  :hover {\n    transform: translateY(-5px);\n  }\n`;\n\nexport const MovieListImg = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieList, MovieListItem, MovieListImg } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(movie => {\n        return (\n          <MovieListItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MovieListImg\n                src={\n                  movie.poster_path\n                    ? 'https://image.tmdb.org/t/p/w300' + movie.poster_path\n                    : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                }\n                alt=\"\"\n              />\n            </Link>\n          </MovieListItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const SearchingForm = styled(Form)`\n  max-width: 450px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: #dde1e7;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #ffffff73;\n`;\n\nexport const SearchFormInput = styled(Field)`\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  padding: 10px 20px;\n  outline: none;\n  border: none;\n  color: ${p => p.theme.colors.text};\n  background-color: transparent;\n\n  ::placeholder {\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\n// SearchForm Button\nexport const SearchFormBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 10px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.text};\n  transition: color 450ms ease-in-out;\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const SearchFormBtnIcon = styled(FaSearch)`\n  width: 25px;\n  height: 25px;\n`;\n","import { Formik } from 'formik';\nimport {\n  SearchingForm,\n  SearchFormInput,\n  SearchFormBtn,\n  SearchFormBtnIcon,\n} from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit, value }) => {\n  return (\n    <Formik\n      initialValues={{ query: value ?? '' }}\n      onSubmit={values => {\n        onSubmit(values);\n      }}\n    >\n      <SearchingForm>\n        <SearchFormInput\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Enter movie name\"\n        />\n        <SearchFormBtn type=\"submit\">\n          <SearchFormBtnIcon />\n        </SearchFormBtn>\n      </SearchingForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getSearchMovies } from 'servises/api';\nimport { MoviesList } from 'components/MovieList/MoviesList';\nimport { MainTitle } from 'components/CommonStyles/MainTitle.styled';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesContainer } from './Movies.styled';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchResult, setSearchResult] = useState([]);\n  useEffect(() => {\n    let filmName = searchParams.get('name') ?? '';\n    if (filmName === '') {\n      return;\n    } else {\n      getSearchMovies({\n        query: filmName,\n        page: 1,\n      }).then(result => {\n        setSearchResult(result.data.results);\n      });\n    }\n  }, [searchParams]);\n\n  const handlerSubmit = value => {\n    if (value.query.trim() === '') {\n      toast('Please, enter a word', {});\n      return;\n    } else {\n      const nextParams = value.query !== '' ? { name: value.query } : {};\n      setSearchParams(nextParams);\n    }\n  };\n\n  return (\n    <MoviesContainer>\n      <MainTitle>search movie by keyword</MainTitle>\n      <SearchForm onSubmit={handlerSubmit} value={searchParams.get('name')} />\n      <MoviesList movies={searchResult} />\n    </MoviesContainer>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'd4083077964ed74e2ce02f9dca4a4248';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst instanceURL = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n// Trend Movies\nexport const getTrending = async () => {\n  try {\n    const response = await instanceURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Full info for movies\nexport const getMoveDetails = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n// Search movies\nexport const getSearchMovies = async query => {\n  try {\n    const response = await instanceURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Actors from movies\nexport const getCredits = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Details from movies\nexport const getReviews = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n"],"names":["MainTitle","styled","p","theme","colors","accent","MovieList","MovieListItem","MovieListImg","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","SearchingForm","Form","SearchFormInput","Field","text","SearchFormBtn","SearchFormBtnIcon","FaSearch","SearchForm","onSubmit","value","initialValues","query","values","type","name","placeholder","MoviesContainer","Movies","useSearchParams","searchParams","setSearchParams","useState","searchResult","setSearchResult","useEffect","filmName","get","getSearchMovies","page","then","result","data","results","trim","nextParams","toast","instanceURL","axios","baseURL","params","api_key","getTrending","response","getMoveDetails","getCredits","getReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/469.3d61a357.chunk.js","mappings":"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","sources":["pages/DetailsMovies/DetailsMovies.styled.js","components/Genres/Genres.styled.js","components/Genres/Genres.jsx","components/MoveInfo/MovieInfo.styled.js","components/MoveInfo/MovieInfo.jsx","components/CommonStyles/BackLink.styled.js","pages/DetailsMovies/DetailsMovies.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieData = styled.div`\n  max-width: 768px;\n`;\n\nexport const AddListItem = styled.li`\n  color: ${p => p.theme.colors.pretitle};\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 14px;\n`;\n\nexport const MoveInfoTitle = styled.h2`\n  color: ${p => p.theme.colors.accent};\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.colors.accent};\n`;\n","import PropTypes from 'prop-types';\nimport { GenresList } from './Genres.styled';\n\nexport const Genres = ({ movieGenres }) => {\n  return (\n    <GenresList>\n      {movieGenres.map(genre => {\n        return <li key={genre.id}>{genre.name}</li>;\n      })}\n    </GenresList>\n  );\n};\n\nGenres.propTypes = {\n  movieGenres: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieInfoCard = styled.div`\n  display: flex;\n  max-width: 1200px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.text};\n  border-bottom: 1px solid ${p => p.theme.colors.border};\n`;\n\nexport const MovieInfoImg = styled.img`\n  display: block;\n  width: 350px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoTitle = styled.h2`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const MovieInfoBlock = styled.div`\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.info_block};\n`;\n\nexport const PreInfoTitle = styled.h5`\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.pretitle};\n`;\n","import PropTypes from 'prop-types';\nimport { Genres } from 'components/Genres/Genres';\nimport {\n  MovieInfoCard,\n  MovieInfoImg,\n  MovieInfoTitle,\n  MovieInfoBlock,\n  PreInfoTitle,\n} from './MovieInfo.styled';\n\n// Functions for normalizing numbers of the year and video rating\n\nconst yearNormalize = value => {\n  const year = value.slice(0, 4);\n  return year;\n};\n\nconst ratingNormalize = value => {\n  const rating = value * 10;\n  return rating.toFixed(1) + '%';\n};\n// ===========================================================\n\nexport const MovieInfo = ({ movie }) => {\n  return (\n    <MovieInfoCard>\n      <MovieInfoImg\n        src={\n          movie.poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + movie.poster_path\n            : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n        }\n        alt=\"\"\n      />\n      <div>\n        <MovieInfoTitle>\n          {movie.title}\n          {'  '}\n          <span>({yearNormalize(movie.release_date)})</span>\n        </MovieInfoTitle>\n        <MovieInfoBlock>\n          Rating: <span>{ratingNormalize(movie.vote_average)}</span>\n        </MovieInfoBlock>\n        <MovieInfoBlock>\n          <PreInfoTitle>Overview:</PreInfoTitle> {movie.overview}\n        </MovieInfoBlock>\n        <MovieInfoBlock>\n          <PreInfoTitle>Genres:</PreInfoTitle>\n          {<Genres movieGenres={movie.genres} />}\n        </MovieInfoBlock>\n      </div>\n    </MovieInfoCard>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 180px;\n  margin-bottom: 40px;\n  padding: 5px;\n  color: ${p => p.theme.colors.text};\n  text-transform: uppercase;\n  background-color: #dde1e7;\n  border-radius: 25px;\n  box-shadow: 2px 2px 5px #babecc, -5px -5px 10px #ffffff73;\n  transition: color 450ms ease-in-out;\n\n  :hover {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const BackLinkIcon = styled(FaArrowLeft)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMoveDetails } from 'servises/api';\n// import { MovieInfoBlock } from 'components/MoveInfo/MovieInfo.styled';\nimport { MoveInfoTitle } from './DetailsMovies.styled';\nimport { MovieInfo } from 'components/MoveInfo/MovieInfo';\nimport {\n  BackLink,\n  BackLinkIcon,\n} from 'components/CommonStyles/BackLink.styled';\nimport { LoaderSpinner } from 'components/Loader/Loader';\nimport { MovieData, AddListItem } from './DetailsMovies.styled';\n\nexport default function DetailsMovies() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState();\n  const location = useLocation().state?.from ?? '/';\n\n  useEffect(() => {\n    getMoveDetails(movieId).then(result => {\n      setMovieInfo(result.data);\n    });\n  }, [movieId]);\n\n  return (\n    <MovieData>\n      <BackLink to={location}>\n        <BackLinkIcon />\n        Back to movies\n      </BackLink>\n      {movieInfo && (\n        <div>\n          <MovieInfo movie={movieInfo} />\n          <MoveInfoTitle>Addictional information:</MoveInfoTitle>\n          <ul\n            style={{\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              marginBottom: '10px',\n            }}\n          >\n            <AddListItem>\n              <Link to=\"credits\" state={{ from: location }}>\n                Cast\n              </Link>\n            </AddListItem>\n            <AddListItem>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </AddListItem>\n          </ul>\n          <Suspense fallback={<LoaderSpinner />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </MovieData>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'd4083077964ed74e2ce02f9dca4a4248';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst instanceURL = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n// Trend Movies\nexport const getTrending = async () => {\n  try {\n    const response = await instanceURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Full info for movies\nexport const getMoveDetails = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n// Search movies\nexport const getSearchMovies = async query => {\n  try {\n    const response = await instanceURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Actors from movies\nexport const getCredits = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Details from movies\nexport const getReviews = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n"],"names":["MovieData","styled","AddListItem","p","theme","colors","pretitle","MoveInfoTitle","accent","GenresList","Genres","movieGenres","map","genre","name","id","MovieInfoCard","text","border","MovieInfoImg","MovieInfoTitle","MovieInfoBlock","info_block","PreInfoTitle","ratingNormalize","value","toFixed","MovieInfo","movie","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","BackLink","Link","BackLinkIcon","FaArrowLeft","DetailsMovies","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","state","from","useEffect","getMoveDetails","then","result","data","to","style","display","justifyContent","marginBottom","Suspense","fallback","Loader","instanceURL","axios","baseURL","params","api_key","getTrending","get","response","toast","getSearchMovies","query","getCredits","getReviews"],"sourceRoot":""}